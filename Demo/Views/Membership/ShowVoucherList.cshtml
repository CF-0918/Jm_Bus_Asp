@{
    ViewBag.Title = "Membership | Voucher List";
}

<div class="container">
<form data-ajax="true"
      data-ajax-update="#target"
      data-ajax-loading="#loader"
      id="f">
    <div class="form-group">
        @Html.TextBox("name", "",
                 new { type = "search", autofocus = "", data_trim = "", data_upper = "" })

    </div>
        <div class="filter-group">
            <!-- Status dropdown filter -->
            <select name="status" class="filter_status" id="status">
                <option value="All" selected="@(ViewBag.Status == "All")">All</option>
                <option value="Active" selected="@(ViewBag.Status == "Active")">Active</option>
                <option value="Inactive" selected="@(ViewBag.Status == "Inactive")">Inactive</option>
                <option value="Expired" selected="@(ViewBag.Status == "Expired")">Expired</option>
            </select>
        </div>
    <button class="btn btn-primary">Search</button>
    <img src="/images/loader.gif" id="loader" style="display: none">
</form>

<div id="target">
    <partial name="_VoucherList">
</div>

    @section foot {
        <script>
            // Delay the search input submission to avoid excessive requests
            let timer = null;

            $('#name').on('input', e => {
                clearTimeout(timer);
                timer = setTimeout(() => $(e.target.form).submit(), 500);
            });

            // Attach event listeners after the content is dynamically updated via AJAX
            function attachEventListeners() {
                // Check All Button
                document.querySelector('[data-check="ids"]')?.addEventListener('click', function() {
                    document.querySelectorAll('input[name="ids"]').forEach(function(checkbox) {
                        checkbox.checked = true;
                    });
                });

                // Uncheck All Button
                document.querySelector('[data-uncheck="ids"]')?.addEventListener('click', function() {
                    document.querySelectorAll('input[name="ids"]').forEach(function(checkbox) {
                        checkbox.checked = false;
                    });
                });

                // Status Dropdowns - change event listener for each voucher's status change
                const statusDropdowns = document.querySelectorAll(".status-dropdown");
                statusDropdowns.forEach(dropdown => {
                    dropdown.addEventListener("change", function () {
                        const voucherId = this.getAttribute("data-voucher-id");
                        const newStatus = this.value;

                        if (confirm("Are you sure you want to change the voucher status?")) {
                            fetch(`/Membership/UpdateVoucherStatus/${voucherId}`, {
                                method: "POST",
                                headers: { "Content-Type": "application/json" },
                                body: JSON.stringify({ status: newStatus })
                            })
                            .then(response => {
                                if (response.ok) {
                                    alert("Voucher status updated successfully.");
                                    location.reload(); // Optional: Reload to reflect changes
                                } else {
                                    alert("Failed to update voucher status.");
                                }
                            })
                            .catch(error => console.error("Error:", error));
                        } else {
                            // Reset dropdown to the original value if the user cancels
                            this.value = this.querySelector("option[selected]").value;
                        }
                    });
                });

                // Filter Status Dropdown - trigger form submission
                const statusDropdown = document.getElementById("status");
                if (statusDropdown) {
                    statusDropdown.addEventListener("change", function () {
                        this.form.submit();
                    });
                }
            }

            // Attach event listeners after the page is loaded or when AJAX content is replaced
            document.addEventListener('DOMContentLoaded', function () {
                attachEventListeners();
            });

            // Re-attach event listeners after the page content is updated by AJAX
            $(document).ajaxComplete(function() {
                attachEventListeners();  // Re-attach event listeners after the AJAX update
            });
        </script>
    }

