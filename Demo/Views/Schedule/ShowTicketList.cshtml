@{
    ViewBag.Title = "Bookings | Ticket List";
}

<div class="container">
    <form data-ajax="true"
          data-ajax-update="#target"
          data-ajax-loading="#loader"
          id="f">
        <div class="form-group">
            <label for="search">Depart Date : </label>
            <input type="date" name="date" id="date" autofocus />
        </div>

        <div class="filter-group">
            <select name="status" class="filter_status" id="status">
                <option value="All" selected="@(ViewBag.Status == "All")">All</option>
                <option value="Pending" selected="@(ViewBag.Status == "Pending")">Pending</option>
                <option value="Booked" selected="@(ViewBag.Status == "Booked")">Booked</option>
                <option value="CheckIn" selected="@(ViewBag.Status == "CheckIn")">CheckIn</option>
                <option value="Cancelled" selected="@(ViewBag.Status == "Cancelled")">Cancelled</option>
                <option value="Expired" selected="@(ViewBag.Status == "Expired")">Expired</option>
            </select>
        </div>
        
            <div class="form-group">
                <label for="search">Search:</label>
                <input type="text" name="search" id="search" class="form-control" placeholder="Member Name or Booking ID" />
            </div>
        
        <button class="btn btn-primary">Search</button>
        <img src="/images/loader.gif" id="loader" style="display: none">
    </form>

    <div id="target">
        <partial name="_TicketList">
    </div>

    @section foot {
        <script>
                let timer = null;

            document.addEventListener('DOMContentLoaded', function () {
                var input = document.getElementById('date');
                if (input) {
                    input.setSelectionRange(input.value.length, input.value.length);
                    input.focus();
                }
            });

            $('#date').on('input', function (e) {
                clearTimeout(timer);
                timer = setTimeout(function () {
                    $(e.target.form).submit();
                }, 500);
            });

            document.addEventListener("DOMContentLoaded", function () {
                const statusDropdown = document.getElementById("status");
                statusDropdown.addEventListener("change", function () {
                    this.form.submit();
                });
            });



             document.addEventListener('DOMContentLoaded', function() {
                // Handle status dropdown changes
                document.querySelectorAll('.status-dropdown').forEach(dropdown => {
                    dropdown.addEventListener('change', function() {
                        const ticketId = this.dataset.ticketId;
                        const newStatus = this.value;
                        const originalValue = this.getAttribute('data-original-value');

                        if (confirm('Are you sure you want to update this booking status?')) {
                            fetch('/Schedule/UpdateBookingStatus', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                                },
                                body: JSON.stringify({
                                    ticketId: ticketId,
                                    status: newStatus
                                })
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    // Store the new value as the original value
                                    this.setAttribute('data-original-value', newStatus);
                                    alert('Status updated successfully');
                                    // Refresh the ticket list
                                    location.reload();
                                } else {
                                    alert(data.message || 'Failed to update status');
                                    // Reset to the original value
                                    this.value = originalValue;
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                alert('An error occurred while updating the status');
                                // Reset to the original value
                                this.value = originalValue;
                            });
                        } else {
                            // Reset to the original value if user cancels
                            this.value = originalValue;
                        }
                    });

                    // Store the initial value as the original value
                    dropdown.setAttribute('data-original-value', dropdown.value);
                });
            });
        </script>
    }
</div>