@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<dynamic>

@{
    string[] fields = { "Id", "RouteLocation", "DepartDate", "DepartTime", "Qty", "Total", "Status" };
} 

@Html.Hidden("sort", "", new { form = "f" })
@Html.Hidden("dir", "", new { form = "f" })

<p>
    @Model.Count() of @Model.TotalItemCount record(s) |
    Page @Model.PageNumber of @Model.PageCount
</p>
<h3>My Bookings</h3>

<form method="post" action="/" id="deleteManyForm">
    <p>
        <button type="button" data-check="ids">Check All</button>
        <button type="button" data-uncheck="ids">Uncheck All</button>
        <button type="submit">Disable Checked</button>
    </p>

    <table class="table" id="target">
        <thead>
          
            <tr>
                <td></td>
                @foreach (var f in fields)
                {
                    string d = "asc";
                    string c = "";

                    if (f == ViewBag.Sort)
                    {
                        d = ViewBag.Dir == "des" ? "asc" : "des";
                        c = ViewBag.Dir;
                    }

                    <th>
                        <a data-ajax="true"
                           data-ajax-update="#target"
                           data-ajax-loading="#loader"
                           href="?name=@ViewBag.Name&sort=@f&dir=@d" class="@c">@f</a>
                    </th>
                }
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" name="ids" value="@booking.booking.Id" />
                    </td>
                    <td>
                        @booking.booking.Id
                    </td>
 
                    <td>@booking.route.Depart - > @booking.route.Destination </td>
                    <td>@booking.schedule.DepartDate</td>
                    <td>@booking.schedule.DepartTime</td>
                    <td>@booking.booking.Qty (Seats) </td>
                    <td>RM @booking.booking.Total</td>
                    <td class="@booking.booking.Status">
                        @booking.booking.Status
                    </td>

                    <td>
                        <!-- Edit and Delete actions -->
                        <a href="@Url.Action("TicketDetails", "Schedule", new { id = booking.booking.Id })" class="btn btn-info btn-sm">View Details</a>
                        @if (booking.booking.Status!="Pending"){
                            <a href="@Url.Action("EditMyTicketSeats", "Schedule", new { id = booking.booking.Id })" class="btn btn-warning btn-sm">Edit Seat</a>
                        }else{
                            <a href="@Url.Action("Index", "Payment", new { bookingId = booking.booking.Id })" class="btn btn-warning btn-sm">Pay Now</a>
                        }

                        @if (booking.booking.Status == "Booked" && booking.schedule.DepartDate == DateOnly.FromDateTime(DateTime.Now))
                        {
                            <a href="@Url.Action("CheckIn", "Schedule", new { bookingId = booking.booking.Id })" class="btn btn-success btn-sm">Check In</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

<div>
    @{
        var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
        options.LinkToFirstPageFormat = "First";
        options.LinkToLastPageFormat = "Last";
        options.LinkToPreviousPageFormat = "Previous";
        options.LinkToNextPageFormat = "Next";

        var ajaxOptions = new AjaxOptions
            {
                HttpMethod = "get",
                UpdateTargetId = "target",
                LoadingElementId = "#loader"
            };
    }

    @Html.PagedListPager(
            Model,
            page => $"?name={ViewBag.Name}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={page}",
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(options, ajaxOptions)
            )
</div>
