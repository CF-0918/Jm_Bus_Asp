@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<dynamic>

@{
    string[] fields = { "Id", "DepartLocation", "DepartDate", "DepartTime", "Qty", "Total","Status", "BookingDateTIme" };
}

<p>
    @Model.Count() of @Model.TotalItemCount record(s) |
    Page @Model.PageNumber of @Model.PageCount
</p>

<h3>History Bookings</h3>

<table class="table" id="target">
    <thead>
        <tr>
            @foreach (var f in fields)
            {
                string d = "asc";
                string c = "";

                if (f == ViewBag.Sort)
                {
                    d = ViewBag.Dir == "des" ? "asc" : "des";
                    c = ViewBag.Dir;
                }

                <th>
                    <a data-ajax="true"
                       data-ajax-update="#target"
                       data-ajax-loading="#loader"
                       href="?name=@ViewBag.Name&sort=@f&dir=@d" class="@c">@f</a>
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var booking in Model)
        {
            <tr>
                <td>@booking.booking.Id</td>
                <td>@booking.route.Depart -> @booking.route.Destination</td>
                <td>@booking.schedule.DepartDate</td>
                <td>@booking.schedule.DepartTime</td>
                <td>@booking.booking.Qty (Seats)</td>
                <td>RM @booking.booking.Total</td>
                <td class="payment-status @booking.booking.Status ">@booking.booking.Status</td>
                <td>@booking.booking.BookingDateTime</td>
                <td>
                    <a href="@Url.Action("TicketDetails", "Schedule", new { id = booking.booking.Id })" class="btn btn-info btn-sm">View Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @{
        var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
        options.LinkToFirstPageFormat = "First";
        options.LinkToLastPageFormat = "Last";
        options.LinkToPreviousPageFormat = "Previous";
        options.LinkToNextPageFormat = "Next";

        var ajaxOptions = new AjaxOptions
            {
                HttpMethod = "get",
                UpdateTargetId = "target",
                LoadingElementId = "#loader"
            };
    }

    @Html.PagedListPager(
            Model,
            page => $"?name={ViewBag.Name}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={page}",
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(options, ajaxOptions)
            )
</div>