@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Ticket>

@{
    string[] fields = ["", "BookingId", "MemberName", "DepartDate", "DepartTime", "Route", "Seats", "Status", "Total"];
}

@Html.Hidden("sort", "", new { form = "f" })
@Html.Hidden("dir", "", new { form = "f" })

<p>
    @Model.Count() of @Model.TotalItemCount record(s) |
    Page @Model.PageNumber of @Model.PageCount
</p>

<table class="table" id="target">
    <tr>
        @foreach (var f in fields)
        {
            string d = "asc";
            string c = "";

            if (f == ViewBag.Sort)
            {
                d = ViewBag.Dir == "des" ? "asc" : "des";
                c = ViewBag.Dir;
            }

            <th>
                <a data-ajax="true"
                   data-ajax-update="#target"
                   data-ajax-loading="#loader"
                   href="?date=@ViewBag.Date&status=@ViewBag.Status&sort=@f&dir=@d" class="@c">@f</a>
            </th>
        }
        <th>Actions</th>
    </tr>

    @foreach (var ticket in Model)
    {
        <tr>
            <td>
                <input type="checkbox" name="ids" value="@ticket.TicketId" />
            </td>
            <td>@ticket.TicketId</td>
            <td>@ticket.MemberName</td>
            <td>@ticket.DepartDate.ToString("dd/MM/yyyy")</td>
            <td>@ticket.DepartTime.ToString("HH:mm")</td>
            <td>@ticket.Route</td>
            <td>@ticket.SeatNo</td>
            <td>
                <select class="status-dropdown" data-Ticket-id="@ticket.TicketId">
                    <option value="Pending" selected="@(ticket.Status == "Pending")">Pending</option>
                    <option value="Booked" selected="@(ticket.Status == "Booked")">Booked</option>
                    <option value="CheckIn" selected="@(ticket.Status == "CheckIn")">CheckIn</option>
                    <option value="Cancelled" selected="@(ticket.Status == "Cancelled")">Cancelled</option>
                    <option value="Expired" selected="@(ticket.Status == "Expired")">Expired</option>
                </select>
            </td>
            <td>@ticket.Total.ToString("C2")</td>
            <td>
                <a href="@Url.Action("TicketDetails", "Schedule", new { id = ticket.TicketId })" class="btn btn-info btn-sm">Details</a>
                @* <a href="@Url.Action("EditTicket", "Schedule", new { id = ticket.TicketId })" class="btn btn-primary btn-sm">Edit</a> *@
                @* @if (ticket.Status != "Cancelled" && ticket.Status != "Expired") *@
                @* { *@
                @*     <button class="btn btn-danger btn-sm" onclick="cancelBooking('@ticket.TicketId')">Cancel</button> *@
                @* } *@
            </td>
        </tr>
    }
</table>

<div>
    @{
        var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
        options.LinkToFirstPageFormat = "First";
        options.LinkToLastPageFormat = "Last";
        options.LinkToPreviousPageFormat = "Previous";
        options.LinkToNextPageFormat = "Next";

        var ajaxOptions = new AjaxOptions
            {
                HttpMethod = "get",
                UpdateTargetId = "target",
                LoadingElementId = "#loader"
            };
    }

    @Html.PagedListPager(
            Model,
            page => $"?date={ViewBag.Date}&status={ViewBag.Status}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={page}",
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(options, ajaxOptions)
            )
</div>