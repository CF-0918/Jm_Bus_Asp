@{
    ViewBag.Title = "Maintenance | Bus List";
    IEnumerable<CategoryBus> categories = ViewBag.Categories as IEnumerable<CategoryBus>;
}


<div class="container">
<form data-ajax="true"
      data-ajax-update="#target"
      data-ajax-loading="#loader"
      id="f">
    <div class="form-group">
        @Html.TextBox("name", "",
                 new { type = "search", autofocus = "", data_trim = "", data_upper = "" })

   </div>
        <div class="filter-group">
            <!-- Status dropdown filter -->
            <select name="status" class="filter_status" id="status">
                <option value="All" selected="@(ViewBag.Status == "All")">All</option>
                <option value="Active" selected="@(ViewBag.Status == "Active")">Active</option>
                <option value="Inactive" selected="@(ViewBag.Status == "Inactive")">Inactive</option>
            </select>
        </div>
        <!-- Category Buttons -->
        <div class="filter-group">
            <!-- Existing Search and Filter Buttons -->
            <button type="submit" class="btn btn-primary">Search</button>
            <img src="/images/loader.gif" id="loader" style="display: none">

            <!-- Dynamically Generated Category Buttons -->
            <div class="category-buttons" style="display: inline-block; margin-left: 10px;">
                <button type="submit" name="categoryId" value="All" class="btn btn-outline-secondary @(string.IsNullOrEmpty(ViewBag.CategoryId) || ViewBag.CategoryId == "All" ? "active" : "")">
                    All
                </button>
                @foreach (var category in categories)
                {
                    <button type="submit" name="categoryId" value="@category.Id" class="btn btn-outline-secondary @(ViewBag.CategoryId == category.Id ? "active" : "")">
                        @category.Name
                    </button>
                }
            </div>
        </div>



    
</form>

<div id="target">
    <partial name="_BusList">
</div>

    @section foot {
        <script>
            let timer = null;

            // Input event for searching by name
            $('#name').on('input', e => {
                clearTimeout(timer);
                timer = setTimeout(() => $(e.target.form).submit(), 500);
            });

            // Check All Button - Event Delegation
            document.addEventListener("DOMContentLoaded", function () {
                document.body.addEventListener("click", function (event) {
                    if (event.target && event.target.getAttribute("data-check") === "ids") {
                        // Select all checkboxes with name 'ids'
                        document.querySelectorAll('input[name="ids"]').forEach(function (checkbox) {
                            checkbox.checked = true;
                        });
                    }
                });

                // Uncheck All Button - Event Delegation
                document.body.addEventListener("click", function (event) {
                    if (event.target && event.target.getAttribute("data-uncheck") === "ids") {
                        // Uncheck all checkboxes with name 'ids'
                        document.querySelectorAll('input[name="ids"]').forEach(function (checkbox) {
                            checkbox.checked = false;
                        });
                    }
                });
            });

            // Handle Status Change for Buses
            function attachStatusChangeListener() {
                const statusDropdowns = document.querySelectorAll(".status-dropdown");

                statusDropdowns.forEach(dropdown => {
                    dropdown.removeEventListener("change", handleStatusChange); // Remove previous event listener
                    dropdown.addEventListener("change", handleStatusChange);
                });
            }

            // Handle the status change logic
            function handleStatusChange(event) {
                const busId = this.getAttribute("data-bus-id");
                const newStatus = this.value;

                if (confirm("Are you sure you want to change the bus status?")) {
                    fetch(`/Maintenance/UpdateBusStatus/${busId}`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ status: newStatus })
                    })
                    .then(response => {
                        if (response.ok) {
                            alert("Bus status updated successfully.");
                            location.reload(); // Reload to reflect changes (optional)
                        } else {
                            alert("Failed to update bus status.");
                        }
                    })
                    .catch(error => console.error("Error:", error));
                } else {
                    // Reset dropdown to the original value if the user cancels
                    this.value = this.querySelector("option[selected]").value;
                }
            }

            // Reattach status change listener after AJAX content update
            $(document).ajaxComplete(function () {
                attachStatusChangeListener();
            });

            // Attach the status change listener initially when the page loads
            document.addEventListener("DOMContentLoaded", function () {
                attachStatusChangeListener();
            });

            // Ensure the form is submitted when the status dropdown is changed
            document.addEventListener("DOMContentLoaded", function () {
                const statusDropdown = document.getElementById("status");

                if (statusDropdown) {
                    statusDropdown.addEventListener("change", function () {
                        // Trigger the form submission when the dropdown value changes
                        this.form.submit();
                    });
                }
            });

                        document.addEventListener("DOMContentLoaded", function () {
                const categoryDropdown = document.getElementById("categoryId");
                if (categoryDropdown) {
                    categoryDropdown.addEventListener("change", function () {
                        this.form.submit();
                    });
                }
            });
        </script>
    }



